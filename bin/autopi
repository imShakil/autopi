#!/usr/bin/python3

import random
import subprocess
import sys
import time

if sys.version_info.major < 3:
    print("This script runs under python3")
    sys.exit()

missing_packages = ['scrot', 'python3-tk', 'python3-dev']


def packages():
    try:
        for package in missing_packages:
            subprocess.check_call(['apt-get', 'install', '-y', package])
    except IOError:
        print(IOError)
        sys.exit()


try:
    from tkinter import *
    from tkinter import ttk
    import pyautogui
except ImportError as e:
    packages()
    subprocess.check_call([sys.executable, '-m', 'pip', 'install', 'pyautogui'])

from tkinter import *
from tkinter import ttk
import pyautogui as pyg

app = Tk()
app.geometry("400x300")
app.minsize(400, 300)
app.title('Python Stalker')
text_box = Text(app, height=30, width=300)
running = False


def popup(msg):
    text_box.pack()
    text_box.delete("1.0", "end")
    text_box.insert('end', msg)
    text_box.update()
    time.sleep(1)


def on_start():
    global running
    running = True
    popup("Program will be started soon.")
    popup("Program is running...")
    app.after(5000, auto_py)


def on_stop():
    global running
    running = False
    popup("Program has stopped.\nPress [START] to run again.")


def on_destroy():
    app.destroy()


def switch_tab():
    popup("Swtiching tabs...")
    pyg.sleep(3)
    pyg.hotkey('ctrl', 'tab')


def refresh_window():
    popup("Refreshing Window...")
    pyg.sleep(3)
    pyg.hotkey('f5')


def page_scroll():
    popup("Scrolling Pages...")
    pyg.sleep(3)
    pyg.scroll(600, 700, 10)
    pyg.scroll(600, 700, -10)


def move_mouse(s_time, r_time):
    px, py = pyg.position()
    if time.time() - s_time >= r_time:
        return
    popup("Mouse position: (" + str(px) + ", " + str(py) + ")")
    px = 250 + (px + random.randint(0, 1600)) % 1600
    py = 150 + (py + random.randint(0, 800)) % 800
    popup("Mouse moving to: (" + str(px) + ", " + str(py) + ")")
    pyg.moveTo(px, py, 1)
    move_mouse(s_time, r_time)


def auto_py():
    if running:
        switch_tab()
        refresh_window()
        r_time = random.randint(5, 30)
        popup("Moving mouse for " + str(r_time) + " seconds")
        move_mouse(time.time(), r_time)
        r_time = random.randint(20, 50)
        popup('Looping...\nProgram will run again after ' + str(r_time) +' seconds.\nPress [STOP] to stop the program.')
        app.after(r_time*1000, auto_py)


start = ttk.Button(app, text="start", command=on_start)
start.pack(padx=10, pady=10)

stop = ttk.Button(app, text="stop", command=on_stop)
stop.pack(padx=30, pady=10)

destroy = ttk.Button(app, text="Exit", command=on_destroy)
destroy.pack(padx=50, pady=10)


app.after(1000, auto_py)
app.mainloop()
